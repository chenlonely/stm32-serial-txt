C51 COMPILER V9.60.0.0   OLED                                                              11/23/2020 23:56:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\oled.ls
                    -t) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          
   4          //初始化SSD1306             
   5          void OLED_Init(void)
   6          {
   7   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
   8   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
   9   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
  10   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
  11   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
  12   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
  13   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
  14   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
  15   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
  16   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
  17   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
  18   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
  19   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
  20   1        OLED_WR_Byte(0x00,OLED_CMD);//  
  21   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
  22   1        OLED_WR_Byte(0x80,OLED_CMD);//  
  23   1      //  OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
  24   1        OLED_WR_Byte(0x05,OLED_CMD);//  
  25   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
  26   1        OLED_WR_Byte(0xF1,OLED_CMD);//  
  27   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
  28   1        OLED_WR_Byte(0x12,OLED_CMD);//
  29   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
  30   1        OLED_WR_Byte(0x30,OLED_CMD);//  
  31   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
  32   1        OLED_WR_Byte(0x14,OLED_CMD);//  
  33   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
  34   1      }
  35          /**********************************************
  36          //IIC Start
  37          **********************************************/
  38          void OLED_IIC_Start(void)
  39          {
  40   1        OLED_SCLK_Set();
  41   1        OLED_SDIN_Set();
  42   1        OLED_SDIN_Clr();
  43   1        OLED_SCLK_Clr();
  44   1      }
  45          /**********************************************
  46          //IIC Stop
  47          **********************************************/
  48          void OLED_IIC_Stop(void)
  49          {
  50   1        OLED_SCLK_Set();
  51   1        OLED_SDIN_Clr();
  52   1        OLED_SDIN_Set();  
  53   1      }
  54          void OLED_IIC_Wait_Ack(void)
C51 COMPILER V9.60.0.0   OLED                                                              11/23/2020 23:56:42 PAGE 2   

  55          {
  56   1        OLED_SCLK_Set();
  57   1        OLED_SCLK_Clr();
  58   1      }
  59          /**********************************************
  60          // IIC Write byte
  61          **********************************************/
  62          void Write_IIC_OLED_Byte(unsigned char IIC_Byte)
  63          {
  64   1        unsigned char i;
  65   1        unsigned char m,da;
  66   1        
  67   1        da=IIC_Byte;
  68   1        OLED_SCLK_Clr();
  69   1        for(i=0;i<8;i++)    
  70   1        {
  71   2          m=da;
  72   2          m=m&0x80;
  73   2          if(m==0x80)
  74   2            OLED_SDIN_Set();
  75   2          else 
  76   2            OLED_SDIN_Clr();    
  77   2          da=da<<1;
  78   2          OLED_SCLK_Set();
  79   2          OLED_SCLK_Clr();
  80   2        }
  81   1      }
  82          /**********************************************
  83          // IIC Write Command
  84          **********************************************/
  85          void Write_IIC_Command(unsigned char IIC_Command)
  86          {
  87   1        OLED_IIC_Start();
  88   1        Write_IIC_OLED_Byte(0x78);            //Slave address,SA0=0
  89   1        OLED_IIC_Wait_Ack();  
  90   1        Write_IIC_OLED_Byte(0x00);      //write command
  91   1        OLED_IIC_Wait_Ack();  
  92   1        Write_IIC_OLED_Byte(IIC_Command); 
  93   1        OLED_IIC_Wait_Ack();  
  94   1        OLED_IIC_Stop();
  95   1      }
  96          /**********************************************
  97          // IIC Write Data
  98          **********************************************/
  99          void Write_IIC_Data(unsigned char IIC_Data)
 100          {
 101   1        OLED_IIC_Start();
 102   1        Write_IIC_OLED_Byte(0x78);      //D/C#=0; R/W#=0
 103   1        OLED_IIC_Wait_Ack();  
 104   1        Write_IIC_OLED_Byte(0x40);      //write data
 105   1        OLED_IIC_Wait_Ack();  
 106   1        Write_IIC_OLED_Byte(IIC_Data);
 107   1        OLED_IIC_Wait_Ack();  
 108   1        OLED_IIC_Stop();
 109   1      }
 110          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 111          {
 112   1        if(cmd)
 113   1        {
 114   2          Write_IIC_Data(dat);  
 115   2        }
 116   1        else
C51 COMPILER V9.60.0.0   OLED                                                              11/23/2020 23:56:42 PAGE 3   

 117   1        {
 118   2          Write_IIC_Command(dat);   
 119   2        }
 120   1      }
 121          
 122          //坐标设置
 123          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 124          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 125   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 126   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 127   1      }       
 128          ////开启OLED显示    
 129          //void OLED_Display_On(void)
 130          //{
 131          //  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 132          //  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 133          //  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 134          //}
 135          ////关闭OLED显示     
 136          //void OLED_Display_Off(void)
 137          //{
 138          //  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 139          //  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 140          //  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 141          //}            
 142          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 143          void OLED_Clear(void)  
 144          {  
 145   1        u8 i,n;       
 146   1        for(i=0;i<8;i++)  
 147   1        {  
 148   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 149   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 150   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 151   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 152   2        } //更新显示
 153   1      }
 154          
 155          void OLED_Clearline(void)
 156          {
 157   1        u8 i,n;       
 158   1        for(i=0;i<8;i++)  
 159   1        {  
 160   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 161   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 162   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 163   2          for(n=0;n<26;n++)OLED_WR_Byte(0,OLED_DATA); 
 164   2        }
 165   1      }
 166          
 167          void OLED_ClearPart(u8 hang,u8 line)
 168          {
 169   1        u8 i,n;       
 170   1        for(i=hang;i<8;i++)  
 171   1        {  
 172   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 173   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 174   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 175   2          for(n=line;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 176   2        }
 177   1      }
 178          
C51 COMPILER V9.60.0.0   OLED                                                              11/23/2020 23:56:42 PAGE 4   

 179          void OLED_On(void)  
 180          {  
 181   1        u8 i,n;       
 182   1        for(i=0;i<8;i++)  
 183   1        {  
 184   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 185   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 186   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 187   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 188   2        } //更新显示
 189   1      }
 190          //在指定位置显示一个字符,包括部分字符
 191          //x:0~127
 192          //y:0~63
 193          //mode:0,反白显示;1,正常显示         
 194          //size:选择字体 16/12 
 195          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 196          {       
 197   1        unsigned char c=0,i=0;  
 198   1          c=chr-' ';//得到偏移后的值      
 199   1          if(x>Max_Column-1){x=0;y=y+2;}
 200   1          if(Char_Size ==16)
 201   1          {
 202   2            OLED_Set_Pos(x,y);  
 203   2            for(i=0;i<8;i++)
 204   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 205   2            OLED_Set_Pos(x,y+1);
 206   2            for(i=0;i<8;i++)
 207   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 208   2          }
 209   1          else 
 210   1          { 
 211   2            OLED_Set_Pos(x,y);
 212   2            for(i=0;i<6;i++)
 213   2            OLED_WR_Byte(F6x8[c][i],OLED_DATA);       
 214   2          }
 215   1      }
 216          
 217          //m^n函数
 218          u16 OLED_pow(u8 m,u8 n)
 219          {
 220   1        u16 result=1;  
 221   1        while(n--)result*=m;    
 222   1        return result;
 223   1      }
 224          
 225          //函数功能：显示无符号num数字
 226          //x,y :起点坐标  
 227          //len :数字的位数
 228          //size:字体大小
 229          //mode:模式 0,填充模式;1,叠加模式
 230          //num:数值(0~4294967295);       
 231          void OLED_ShowUnNum(u8 x,u8 y,u16 num,u8 len,u8 size)
 232          {           
 233   1        u8 t,temp;
 234   1        u8 enshow=0;               
 235   1        for(t=0;t<len;t++)
 236   1        {
 237   2          temp=(num/OLED_pow(10,len-t-1))%10;
 238   2          if(enshow==0&&t<(len-1))
 239   2          {
 240   3            if(temp==0)
C51 COMPILER V9.60.0.0   OLED                                                              11/23/2020 23:56:42 PAGE 5   

 241   3            {
 242   4              OLED_ShowChar(x+(size/2)*t,y,'0',size);
 243   4              continue;
 244   4            }else enshow=1;    
 245   3          }
 246   2          OLED_ShowChar(x+(size/2)*t,y,temp+'0',size); 
 247   2        }
 248   1      }
 249          
 250          /*
 251          函数功能：显示数字
 252          参数：xy坐标，num显示数字，len是数字长度，size数字大小模式
 253          返回值：无
 254          */
 255          void OLED_ShowNum(u8 x, u8 y, int num, u8 len, u8 size)
 256          {
 257   1        if(num>=0)
 258   1        {
 259   2          OLED_ShowChar(x,y,' ',size);
 260   2          OLED_ShowUnNum(x+(size/2),y,num,len,size);
 261   2          return;
 262   2        }
 263   1        
 264   1        OLED_ShowChar(x,y,'-',size);
 265   1        OLED_ShowUnNum(x+(size/2),y,-num,len,size);
 266   1      }
 267          
 268          /*
 269          函数功能：显示无符号float数字
 270          参数：xy坐标，num显示数字，precise显示数字的精度，size数字大小模式
 271          返回值：无
 272          */
 273          void OLED_ShowUnFloat(u8 x, u8 y, double num, u8 precisenum, u8 precisefloat, u8 size)
 274          {
 275   1        u8 i = 0;
 276   1      
 277   1        u16 integer;
 278   1        double decimal;
 279   1        
 280   1        integer = (int)num;//整数部分
 281   1        decimal = (double)(num - integer);//小数部分
 282   1        
 283   1        OLED_ShowNum(x,y,integer,precisenum,size);//显示整数部分
 284   1        OLED_ShowChar(x+(size/2)*(precisenum+1),y,'.',size);//显示小数点
 285   1        
 286   1        x = x+(size/2)*(precisenum+2);
 287   1        while (precisefloat)//显示几位小数
 288   1        {
 289   2          decimal = decimal * 10;
 290   2          integer = (int)decimal;//取出一位小数
 291   2          decimal = (double)(decimal - integer);
 292   2          OLED_ShowChar(x+(size/2)*i, y, integer + '0', size);//循环显示每位数字字符，从高位显示
 293   2          i++;
 294   2          precisefloat--;
 295   2        }
 296   1      }
 297          
 298          /*显示float型数据,含负数*/
 299          void OLED_ShowFloat(u8 x, u8 y, double num, u8 precisenum, u8 precisefloat, u8 size)
 300          {
 301   1        if (num < 0)
 302   1        {
C51 COMPILER V9.60.0.0   OLED                                                              11/23/2020 23:56:42 PAGE 6   

 303   2          OLED_ShowChar(x, y, '-', size);
 304   2          num = -num;
 305   2          OLED_ShowUnFloat(x+(size/2),y,num,precisenum,precisefloat,size);
 306   2          return;
 307   2        }
 308   1        OLED_ShowChar(x, y, ' ', size);
 309   1        OLED_ShowUnFloat(x+(size/2),y,num,precisenum,precisefloat,size);
 310   1      }
 311          
 312          //显示一个字符号串
 313          //void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 314          //{
 315          //  unsigned char j=0;
 316          //  while (chr[j]!='\0')
 317          //  {   OLED_ShowChar(x,y,chr[j],Char_Size);
 318          //      x+=8;
 319          //      if(x>120){x=0;y+=2;}
 320          //      j++;
 321          //  }
 322          //}
 323          void OLED_ShowString(unsigned char x,unsigned char y,unsigned char *chr,unsigned char Char_Size)
 324          {
 325   1        unsigned char j=0;
 326   1        while (chr[j]!='\0')
 327   1        {   
 328   2          OLED_ShowChar(x,y,chr[j],Char_Size);
 329   2            x+=8;
 330   2          if(x>120){x=0;y+=2;}
 331   2            j++;
 332   2        }
 333   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1489    ----
   CONSTANT SIZE    =   2072    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      58
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
